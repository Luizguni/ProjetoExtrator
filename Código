" Programa de extração de dados mestre para clientes, fornecedores e materiais,
" exportando os resultados para arquivos CSV com base na seleção do usuário.
REPORT zextrator_sam.

"----------------------------*
" Parâmetros de seleção na tela inicial
"----------------------------*
PARAMETERS:
  p_cli  TYPE abap_bool,  " Extrair dados de clientes
  p_forn TYPE abap_bool,  " Extrair dados de fornecedores
  p_mexp TYPE abap_bool,  " Extrair materiais de exportação
  p_mall TYPE abap_bool,  " Extrair todos os materiais
  p_path TYPE string.     " Caminho para salvar os arquivos CSV

"----------------------------*
" Tabelas internas baseadas nas estruturas Z
"----------------------------*
DATA:
  lt_clientes     TYPE STANDARD TABLE OF zsam_extrator,              " Clientes
  lt_fornecedores TYPE STANDARD TABLE OF zsam_extrator_fornecedor,   " Fornecedores
  lt_mat_exp      TYPE STANDARD TABLE OF zsam_extrator_material_exp, " Materiais exportação
  lt_todos        TYPE STANDARD TABLE OF zsam_extr_todos_materiais.  " Todos os materiais

"----------------------------*
" Execução principal do programa
"----------------------------*

START-OF-SELECTION.

  " Verifica cada parâmetro e executa a rotina correspondente
  IF p_cli = abap_true.
    PERFORM extrair_cliente.
  ENDIF.

  IF p_forn = abap_true.
    PERFORM extrair_fornecedor.
  ENDIF.

  IF p_mexp = abap_true.
    PERFORM extrair_material_exp.
  ENDIF.

  IF p_mall = abap_true.
    PERFORM extrair_todos_materiais.
  ENDIF.

  "----------------------------*
  " Rotina: extrair_cliente
  " Preenche dados simulados de cliente e gera CSV
  "----------------------------*
FORM extrair_cliente.
  CLEAR lt_clientes.

  " Adiciona um cliente fictício para teste
  APPEND VALUE #( kunnr        = '0000000001'
                  name1        = 'Cliente A'
                  stras        = 'Rua A'
                  ort01        = 'Cidade A'
                  state        = 'SP'
                  region       = '01'
                  country      = 'BR'
                  tel_number   = '11999999999'
                  fax_number   = '1133333333'
                  smtp_addr    = 'clienteA@empresa.com'
                  contact_name = 'Contato A' ) TO lt_clientes.

  " Gera CSV a partir da tabela lt_clientes
  PERFORM gerar_csv USING lt_clientes 'CLIENTE'.
ENDFORM.

"----------------------------*
" Rotina: extrair_fornecedor
" Preenche dados simulados de fornecedor e gera CSV
"----------------------------*
FORM extrair_fornecedor.
  CLEAR lt_fornecedores.

  " Adiciona um fornecedor fictício para teste
  APPEND VALUE #( lifnr        = 'F0001'
                  name1        = 'Fornecedor A'
                  stras        = 'Rua F'
                  ort01        = 'Cidade F'
                  state        = 'RJ'
                  region       = '02'
                  country      = 'BR'
                  tel_number   = '2133334444'
                  fax_number   = '2133335555'
                  smtp_addr    = 'fornecedor@empresa.com'
                  contact_name = 'Contato F' ) TO lt_fornecedores.

  " Gera CSV a partir da tabela lt_fornecedores
  PERFORM gerar_csv USING lt_fornecedores 'FORNECEDOR'.
ENDFORM.

"----------------------------*
" Rotina: extrair_material_exp
" Preenche dados simulados de material de exportação e gera CSV
"----------------------------*
FORM extrair_material_exp.
  CLEAR lt_mat_exp.

  " Adiciona um material de exportação fictício
  APPEND VALUE #( matnr     = 'MAT001'
                  maktx     = 'Material X'
                  meins     = 'PC'
                  matkl     = 'GRUPO1'
                  ean11     = '7891234567890'
                  site_name = 'Fábrica 1' ) TO lt_mat_exp.

  " Gera CSV a partir da tabela lt_mat_exp
  PERFORM gerar_csv USING lt_mat_exp 'MAT_EXP'.
ENDFORM.

"----------------------------*
" Rotina: extrair_todos_materiais
" Preenche dados simulados de todos os materiais e gera CSV
"----------------------------*
FORM extrair_todos_materiais.
  CLEAR lt_todos.

  " Adiciona um material geral com fornecedor fictício
  APPEND VALUE #( matnr     = 'MAT002'
                  maktx     = 'Material Y'
                  meins     = 'CX'
                  matkl     = 'GRUPO2'
                  site_name = 'Fábrica 2'
                  lifnr     = 'F0002'
                  name1     = 'Fornecedor B' ) TO lt_todos.

  " Gera CSV a partir da tabela lt_todos
  PERFORM gerar_csv USING lt_todos 'TODOS_MAT'.
ENDFORM.

"----------------------------*
" Rotina: gerar_csv
" Gera o arquivo CSV com os dados fornecidos na tabela
"----------------------------*
FORM gerar_csv USING it_data TYPE STANDARD TABLE
                      p_tipo  TYPE string.

  DATA: lv_file TYPE string, " Caminho completo do arquivo
        lv_line TYPE string. " Linha do CSV a ser escrita

  " Monta o nome do arquivo com base no tipo e caminho fornecido
  lv_file = p_path && '/' && p_tipo && '.csv'.

  " Abre o arquivo para escrita
  OPEN DATASET lv_file FOR OUTPUT IN TEXT MODE ENCODING DEFAULT.

  " Itera sobre cada linha da tabela
  LOOP AT it_data ASSIGNING FIELD-SYMBOL(<fs>).
    CLEAR lv_line.

    " Concatena todos os campos da estrutura, separados por ponto e vírgula
    DO.
      ASSIGN COMPONENT sy-index OF STRUCTURE <fs> TO FIELD-SYMBOL(<f>).
      IF sy-subrc <> 0.
        EXIT. " Sai do loop quando todos os campos forem processados
      ENDIF.
      CONCATENATE lv_line <f> INTO lv_line SEPARATED BY ';'.
    ENDDO.

    " Escreve a linha no arquivo CSV
    TRANSFER lv_line TO lv_file.
  ENDLOOP.

  " Fecha o arquivo
  CLOSE DATASET lv_file.
ENDFORM.
